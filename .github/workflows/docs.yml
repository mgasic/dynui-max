name: Documentation & Publishing

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  # Build Storybook
  storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm build
        
      - name: Build Storybook
        run: pnpm --filter @dynui-max/storybook build
        
      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: apps/storybook/storybook-static
          
  # Build API docs
  api-docs:
    name: Build API Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm build
        
      - name: Generate API docs
        run: pnpm --filter @dynui-max/docs build
        
      - name: Upload API docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-docs-build
          path: apps/docs/dist
          
  # Deploy to GitHub Pages
  deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [storybook, api-docs]
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Storybook
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: ./storybook
          
      - name: Download API docs
        uses: actions/download-artifact@v4
        with:
          name: api-docs-build
          path: ./api-docs
          
      - name: Create deployment structure
        run: |
          mkdir -p ./public
          cp -r ./storybook/* ./public/
          mkdir -p ./public/api
          cp -r ./api-docs/* ./public/api/
          
          # Create index.html redirect
          cat > ./public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>DynUI-Max Documentation</title>
            <meta charset="utf-8" />
            <meta http-equiv="refresh" content="0; url=./storybook" />
            <style>
              body { font-family: system-ui; text-align: center; padding: 2rem; }
              .links { margin-top: 2rem; }
              .links a { margin: 0 1rem; padding: 0.5rem 1rem; background: #3b82f6; color: white; text-decoration: none; border-radius: 4px; }
            </style>
          </head>
          <body>
            <h1>DynUI-Max Documentation</h1>
            <p>Redirecting to Storybook...</p>
            <div class="links">
              <a href="./storybook">ðŸ“– Component Stories</a>
              <a href="./api">ðŸ“š API Documentation</a>
            </div>
          </body>
          </html>
          EOF
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  # NPM Publishing (on tags)
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run quality gates
        run: pnpm quality:gates
        
      - name: Build packages
        run: pnpm build
        
      - name: Publish packages
        run: pnpm publish -r --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}